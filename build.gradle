buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
    }
}


plugins {
    id "io.spring.dependency-management" version "1.0.2.RELEASE"
    id 'net.researchgate.release' version '2.4.1'
    id "com.jfrog.bintray" version "1.7"
}

project.description = 'EPAM Report portal. Common DAO Layer'

apply plugin: 'java'
apply plugin: 'jacoco'
apply from: 'release-lib.gradle'
apply from: 'build-quality.gradle'


repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/epam/reportportal" }
    maven { url 'https://jitpack.io' }
    maven {
        url 'https://repo.spring.io/libs-milestone'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencyManagement {
    imports {
        mavenBom "com.github.reportportal:commons-bom:master-SNAPSHOT"
    }
}


project.ext {
    releaseMode = project.hasProperty("releaseMode")
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.5'
}

dependencies {

    if (releaseMode) {
        compile 'com.epam.reportportal:commons:3.1.0'
        compile 'com.epam.reportportal:commons-rules:4.0.1'
    } else {
        compile('com.github.reportportal:commons:71d4aca')
        compile 'com.github.reportportal:commons-rules:spb2-SNAPSHOT'
        compile 'com.github.reportportal:commons-model:0351b6f'
    }

    //    seaweedfs
    compile 'org.lokra.seaweedfs:seaweedfs-client:0.7.3.RELEASE'
//    end of seaweedfs

    compile group: 'org.jooq', name: 'jooq', version: '3.10.6'
    compile group: 'commons-lang', name: 'commons-lang', version: '2.6'
    compile group: 'commons-fileupload', name: 'commons-fileupload', version: '1.3.3'

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile group: 'org.hibernate', name: 'hibernate-validator', version: '6.0.7.Final'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.5.10.RELEASE'

    compile 'org.springframework.security:spring-security-oauth2-client'

    compile('org.postgresql:postgresql')
    runtime('org.postgresql:postgresql')

    compile 'org.springframework.boot:spring-boot'
    compile 'org.springframework.boot:spring-boot-autoconfigure'
    compile 'org.springframework:spring-context-support'
    compile 'com.github.ben-manes.caffeine:caffeine'

    compile 'net.coobird:thumbnailator:0.4.8'
    compile 'commons-validator:commons-validator:1.6'
    compile 'com.google.guava:guava:23.0'
    compile 'org.jasypt:jasypt:1.9.2'
    compile 'com.google.code.findbugs:jsr305:3.0.2'
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'org.reflections:reflections:0.9.11'

    /* just for password encoder. To make sure Guava and Spring's Crypto generate the same  hash functions */
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'junit:junit:4.12'
    testCompile 'org.mockito:mockito-all:2.0.2-beta'
    testCompile 'org.assertj:assertj-core:3.9.0'
    testCompile 'org.dbunit:dbunit:2.5.4'

//    testCompile 'org.springframework.boot:spring-boot-test'
    testCompile 'org.springframework:spring-test'
    testCompile 'org.springframework.security:spring-security-crypto'
    testCompile 'org.springframework.security:spring-security-core'
    testCompile 'org.hibernate:hibernate-validator:6.0.7.Final'

    testCompile("com.h2database:h2")
    testCompile 'com.github.database-rider:rider-spring:1.2.8'
    testCompile 'org.dbunit:dbunit:2.5.4'

    testCompile 'org.testcontainers:postgresql:1.8.0'


}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

test {
    testLogging {
        events "failed"
        exceptionFormat "short"
    }
}

build.dependsOn jacocoTestReport
