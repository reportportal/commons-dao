import org.owasp.dependencycheck.reporting.ReportGenerator

plugins {
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
    id 'java-library'
    id 'org.owasp.dependencycheck' version '11.1.1'
    id "org.jooq.jooq-codegen-gradle" version "${jooqVersion}"
}

apply from: 'project-properties.gradle'
apply from: "$scriptsUrl/release-commons.gradle"
apply from: "$scriptsUrl/signing.gradle"
apply from: "$scriptsUrl/copy-database-scripts.gradle"
//apply from: "$scriptsUrl/build-quality.gradle"
//apply from: "$scriptsUrl/jacoco.gradle" // TODO: fix scripts
apply from: 'jooq.gradle'

repositories {
    mavenCentral { url "https://repo1.maven.org/maven2" }

    if (!releaseMode) {
        maven { url 'https://jitpack.io' }
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

ext['spring-boot.version'] = "${springBootVersion}"

dependencyManagement {
    imports {
        mavenBom(releaseMode ? 'com.epam.reportportal:commons-bom:5.13.0' : 'com.epam.reportportal:commons-bom:5.13.0')
        mavenBom('io.zonky.test.postgres:embedded-postgres-binaries-bom:16.2.0')
    }
}

dependencies {
    if (releaseMode) {
        implementation 'com.epam.reportportal:commons'
    } else {
        implementation 'com.github.reportportal:commons:bcb72b3'
    }
    implementation "io.swagger.core.v3:swagger-annotations-jakarta:2.2.25"
    // jooq dependencies
    api "org.jooq:jooq:${jooqVersion}"
    implementation "org.postgresql:postgresql:${jdbcDriverVersion}"
    jooqCodegen "org.postgresql:postgresql:${jdbcDriverVersion}"

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'javax.xml.bind:jaxb-api:2.4.0-b180830.0359'

    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework:spring-webmvc'
    implementation 'org.apache.tika:tika-core'
    api('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.hibernate', module: 'hibernate-core'
    }
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    implementation 'io.minio:minio:8.5.14'

    api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    implementation "org.hibernate.validator:hibernate-validator:${hibernateValidatorVersion}"

    api 'org.apache.commons:commons-collections4:4.4'
    api ('commons-validator:commons-validator:1.9.0') { // for EmailValidator only
        exclude group: 'commons-beanutils', module: 'commons-beanutils'
    }

    api 'org.jasypt:jasypt:1.9.3'

    api 'io.zonky.test:embedded-postgres:2.0.7'
    api 'org.apache.commons:commons-compress:1.27.1'
    implementation 'org.flywaydb:flyway-core:10.15.2'
    implementation 'org.flywaydb:flyway-database-postgresql:10.20.0'

    api "org.apache.jclouds.api:s3:${jcloudsVersion}"
    implementation "org.apache.jclouds.provider:aws-s3:${jcloudsVersion}"
    implementation "org.apache.jclouds.api:filesystem:${jcloudsVersion}"
    api 'com.google.guava:guava:33.2.1-jre'

    // add lombok support
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.flywaydb.flyway-test-extensions:flyway-spring6-test:10.0.0'

}

dependencyCheck {
    formats = [ReportGenerator.Format.HTML, ReportGenerator.Format.XML]
}

test {
    useJUnitPlatform()
    testLogging {
        events = ["failed"]
        exceptionFormat = "short"
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-parameters"
    options.debug = true
    options.debugOptions.debugLevel = "source,lines,vars"
}

checkCommitNeeded.dependsOn removeScripts
test.dependsOn copyTestDatabaseScripts
//build.dependsOn jacocoTestReport

tasks.preTagCommit.enabled = false
tasks.updateVersion.enabled = false
tasks.commitNewVersion.enabled = false
