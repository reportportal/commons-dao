/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.tables.JTicket;

import java.time.Instant;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JTicketRecord extends UpdatableRecordImpl<JTicketRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.ticket.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ticket.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.ticket.ticket_id</code>.
     */
    public void setTicketId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ticket.ticket_id</code>.
     */
    public String getTicketId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.ticket.submitter</code>.
     */
    public void setSubmitter(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ticket.submitter</code>.
     */
    public String getSubmitter() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.ticket.submit_date</code>.
     */
    public void setSubmitDate(Instant value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.ticket.submit_date</code>.
     */
    public Instant getSubmitDate() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>public.ticket.bts_url</code>.
     */
    public void setBtsUrl(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.ticket.bts_url</code>.
     */
    public String getBtsUrl() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.ticket.bts_project</code>.
     */
    public void setBtsProject(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.ticket.bts_project</code>.
     */
    public String getBtsProject() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.ticket.url</code>.
     */
    public void setUrl(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.ticket.url</code>.
     */
    public String getUrl() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.ticket.plugin_name</code>.
     */
    public void setPluginName(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.ticket.plugin_name</code>.
     */
    public String getPluginName() {
        return (String) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JTicketRecord
     */
    public JTicketRecord() {
        super(JTicket.TICKET);
    }

    /**
     * Create a detached, initialised JTicketRecord
     */
    public JTicketRecord(Long id, String ticketId, String submitter, Instant submitDate, String btsUrl, String btsProject, String url, String pluginName) {
        super(JTicket.TICKET);

        setId(id);
        setTicketId(ticketId);
        setSubmitter(submitter);
        setSubmitDate(submitDate);
        setBtsUrl(btsUrl);
        setBtsProject(btsProject);
        setUrl(url);
        setPluginName(pluginName);
        resetChangedOnNotNull();
    }
}
