/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.tables.JOauthAccessToken;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JOauthAccessTokenRecord extends UpdatableRecordImpl<JOauthAccessTokenRecord> implements Record9<Long, String, byte[], String, String, Long, String, byte[], String> {

    private static final long serialVersionUID = 1312835184;

    /**
     * Setter for <code>public.oauth_access_token.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.oauth_access_token.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.oauth_access_token.token_id</code>.
     */
    public void setTokenId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.oauth_access_token.token_id</code>.
     */
    public String getTokenId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.oauth_access_token.token</code>.
     */
    public void setToken(byte... value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.oauth_access_token.token</code>.
     */
    public byte[] getToken() {
        return (byte[]) get(2);
    }

    /**
     * Setter for <code>public.oauth_access_token.authentication_id</code>.
     */
    public void setAuthenticationId(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.oauth_access_token.authentication_id</code>.
     */
    public String getAuthenticationId() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.oauth_access_token.username</code>.
     */
    public void setUsername(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.oauth_access_token.username</code>.
     */
    public String getUsername() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.oauth_access_token.user_id</code>.
     */
    public void setUserId(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.oauth_access_token.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>public.oauth_access_token.client_id</code>.
     */
    public void setClientId(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.oauth_access_token.client_id</code>.
     */
    public String getClientId() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.oauth_access_token.authentication</code>.
     */
    public void setAuthentication(byte... value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.oauth_access_token.authentication</code>.
     */
    public byte[] getAuthentication() {
        return (byte[]) get(7);
    }

    /**
     * Setter for <code>public.oauth_access_token.refresh_token</code>.
     */
    public void setRefreshToken(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.oauth_access_token.refresh_token</code>.
     */
    public String getRefreshToken() {
        return (String) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Long, String, byte[], String, String, Long, String, byte[], String> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Long, String, byte[], String, String, Long, String, byte[], String> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JOauthAccessToken.OAUTH_ACCESS_TOKEN.ID;
    }

    @Override
    public Field<String> field2() {
        return JOauthAccessToken.OAUTH_ACCESS_TOKEN.TOKEN_ID;
    }

    @Override
    public Field<byte[]> field3() {
        return JOauthAccessToken.OAUTH_ACCESS_TOKEN.TOKEN;
    }

    @Override
    public Field<String> field4() {
        return JOauthAccessToken.OAUTH_ACCESS_TOKEN.AUTHENTICATION_ID;
    }

    @Override
    public Field<String> field5() {
        return JOauthAccessToken.OAUTH_ACCESS_TOKEN.USERNAME;
    }

    @Override
    public Field<Long> field6() {
        return JOauthAccessToken.OAUTH_ACCESS_TOKEN.USER_ID;
    }

    @Override
    public Field<String> field7() {
        return JOauthAccessToken.OAUTH_ACCESS_TOKEN.CLIENT_ID;
    }

    @Override
    public Field<byte[]> field8() {
        return JOauthAccessToken.OAUTH_ACCESS_TOKEN.AUTHENTICATION;
    }

    @Override
    public Field<String> field9() {
        return JOauthAccessToken.OAUTH_ACCESS_TOKEN.REFRESH_TOKEN;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTokenId();
    }

    @Override
    public byte[] component3() {
        return getToken();
    }

    @Override
    public String component4() {
        return getAuthenticationId();
    }

    @Override
    public String component5() {
        return getUsername();
    }

    @Override
    public Long component6() {
        return getUserId();
    }

    @Override
    public String component7() {
        return getClientId();
    }

    @Override
    public byte[] component8() {
        return getAuthentication();
    }

    @Override
    public String component9() {
        return getRefreshToken();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTokenId();
    }

    @Override
    public byte[] value3() {
        return getToken();
    }

    @Override
    public String value4() {
        return getAuthenticationId();
    }

    @Override
    public String value5() {
        return getUsername();
    }

    @Override
    public Long value6() {
        return getUserId();
    }

    @Override
    public String value7() {
        return getClientId();
    }

    @Override
    public byte[] value8() {
        return getAuthentication();
    }

    @Override
    public String value9() {
        return getRefreshToken();
    }

    @Override
    public JOauthAccessTokenRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public JOauthAccessTokenRecord value2(String value) {
        setTokenId(value);
        return this;
    }

    @Override
    public JOauthAccessTokenRecord value3(byte... value) {
        setToken(value);
        return this;
    }

    @Override
    public JOauthAccessTokenRecord value4(String value) {
        setAuthenticationId(value);
        return this;
    }

    @Override
    public JOauthAccessTokenRecord value5(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public JOauthAccessTokenRecord value6(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public JOauthAccessTokenRecord value7(String value) {
        setClientId(value);
        return this;
    }

    @Override
    public JOauthAccessTokenRecord value8(byte... value) {
        setAuthentication(value);
        return this;
    }

    @Override
    public JOauthAccessTokenRecord value9(String value) {
        setRefreshToken(value);
        return this;
    }

    @Override
    public JOauthAccessTokenRecord values(Long value1, String value2, byte[] value3, String value4, String value5, Long value6, String value7, byte[] value8, String value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JOauthAccessTokenRecord
     */
    public JOauthAccessTokenRecord() {
        super(JOauthAccessToken.OAUTH_ACCESS_TOKEN);
    }

    /**
     * Create a detached, initialised JOauthAccessTokenRecord
     */
    public JOauthAccessTokenRecord(Long id, String tokenId, byte[] token, String authenticationId, String username, Long userId, String clientId, byte[] authentication, String refreshToken) {
        super(JOauthAccessToken.OAUTH_ACCESS_TOKEN);

        set(0, id);
        set(1, tokenId);
        set(2, token);
        set(3, authenticationId);
        set(4, username);
        set(5, userId);
        set(6, clientId);
        set(7, authentication);
        set(8, refreshToken);
    }
}
