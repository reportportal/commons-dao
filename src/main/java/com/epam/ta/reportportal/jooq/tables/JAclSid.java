/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables;


import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.JPublic;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.tables.records.JAclSidRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JAclSid extends TableImpl<JAclSidRecord> {

    private static final long serialVersionUID = 2014159433;

    /**
     * The reference instance of <code>public.acl_sid</code>
     */
    public static final JAclSid ACL_SID = new JAclSid();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JAclSidRecord> getRecordType() {
        return JAclSidRecord.class;
    }

    /**
     * The column <code>public.acl_sid.id</code>.
     */
    public final TableField<JAclSidRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('acl_sid_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.acl_sid.principal</code>.
     */
    public final TableField<JAclSidRecord, Boolean> PRINCIPAL = createField("principal", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>public.acl_sid.sid</code>.
     */
    public final TableField<JAclSidRecord, String> SID = createField("sid", org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * Create a <code>public.acl_sid</code> table reference
     */
    public JAclSid() {
        this(DSL.name("acl_sid"), null);
    }

    /**
     * Create an aliased <code>public.acl_sid</code> table reference
     */
    public JAclSid(String alias) {
        this(DSL.name(alias), ACL_SID);
    }

    /**
     * Create an aliased <code>public.acl_sid</code> table reference
     */
    public JAclSid(Name alias) {
        this(alias, ACL_SID);
    }

    private JAclSid(Name alias, Table<JAclSidRecord> aliased) {
        this(alias, aliased, null);
    }

    private JAclSid(Name alias, Table<JAclSidRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JAclSid(Table<O> child, ForeignKey<O, JAclSidRecord> key) {
        super(child, key, ACL_SID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACL_SID_IDX, Indexes.ACL_SID_PKEY, Indexes.UNIQUE_UK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JAclSidRecord, Long> getIdentity() {
        return Keys.IDENTITY_ACL_SID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JAclSidRecord> getPrimaryKey() {
        return Keys.ACL_SID_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JAclSidRecord>> getKeys() {
        return Arrays.<UniqueKey<JAclSidRecord>>asList(Keys.ACL_SID_PKEY, Keys.UNIQUE_UK_1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JAclSidRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JAclSidRecord, ?>>asList(Keys.ACL_SID__ACL_SID_SID_FKEY);
    }

    public JUsers users() {
        return new JUsers(this, Keys.ACL_SID__ACL_SID_SID_FKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JAclSid as(String alias) {
        return new JAclSid(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JAclSid as(Name alias) {
        return new JAclSid(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JAclSid rename(String name) {
        return new JAclSid(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JAclSid rename(Name name) {
        return new JAclSid(name, null);
    }
}
