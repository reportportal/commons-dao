/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.tables.JIssueTicket;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JIssueTicketRecord extends UpdatableRecordImpl<JIssueTicketRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.issue_ticket.issue_id</code>.
     */
    public void setIssueId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.issue_ticket.issue_id</code>.
     */
    public Long getIssueId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.issue_ticket.ticket_id</code>.
     */
    public void setTicketId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.issue_ticket.ticket_id</code>.
     */
    public Long getTicketId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JIssueTicketRecord
     */
    public JIssueTicketRecord() {
        super(JIssueTicket.ISSUE_TICKET);
    }

    /**
     * Create a detached, initialised JIssueTicketRecord
     */
    public JIssueTicketRecord(Long issueId, Long ticketId) {
        super(JIssueTicket.ISSUE_TICKET);

        setIssueId(issueId);
        setTicketId(ticketId);
        resetChangedOnNotNull();
    }
}
