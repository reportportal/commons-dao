/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.tables.JOauthRegistrationScope;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JOauthRegistrationScopeRecord extends UpdatableRecordImpl<JOauthRegistrationScopeRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.oauth_registration_scope.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.oauth_registration_scope.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for
     * <code>public.oauth_registration_scope.oauth_registration_fk</code>.
     */
    public void setOauthRegistrationFk(String value) {
        set(1, value);
    }

    /**
     * Getter for
     * <code>public.oauth_registration_scope.oauth_registration_fk</code>.
     */
    public String getOauthRegistrationFk() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.oauth_registration_scope.scope</code>.
     */
    public void setScope(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.oauth_registration_scope.scope</code>.
     */
    public String getScope() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JOauthRegistrationScopeRecord
     */
    public JOauthRegistrationScopeRecord() {
        super(JOauthRegistrationScope.OAUTH_REGISTRATION_SCOPE);
    }

    /**
     * Create a detached, initialised JOauthRegistrationScopeRecord
     */
    public JOauthRegistrationScopeRecord(Integer id, String oauthRegistrationFk, String scope) {
        super(JOauthRegistrationScope.OAUTH_REGISTRATION_SCOPE);

        setId(id);
        setOauthRegistrationFk(oauthRegistrationFk);
        setScope(scope);
        resetChangedOnNotNull();
    }
}
