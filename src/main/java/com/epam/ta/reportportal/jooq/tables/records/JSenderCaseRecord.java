/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.enums.JLogicalOperatorEnum;
import com.epam.ta.reportportal.jooq.tables.JSenderCase;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JSenderCaseRecord extends UpdatableRecordImpl<JSenderCaseRecord> implements Record8<Long, String, Long, Boolean, JLogicalOperatorEnum, String, String, JSONB> {

    private static final long serialVersionUID = -2078586129;

    /**
     * Setter for <code>public.sender_case.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.sender_case.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.sender_case.send_case</code>.
     */
    public void setSendCase(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.sender_case.send_case</code>.
     */
    public String getSendCase() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.sender_case.project_id</code>.
     */
    public void setProjectId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.sender_case.project_id</code>.
     */
    public Long getProjectId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>public.sender_case.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.sender_case.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>public.sender_case.attributes_operator</code>.
     */
    public void setAttributesOperator(JLogicalOperatorEnum value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.sender_case.attributes_operator</code>.
     */
    public JLogicalOperatorEnum getAttributesOperator() {
        return (JLogicalOperatorEnum) get(4);
    }

    /**
     * Setter for <code>public.sender_case.rule_name</code>.
     */
    public void setRuleName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.sender_case.rule_name</code>.
     */
    public String getRuleName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.sender_case.rule_type</code>.
     */
    public void setRuleType(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.sender_case.rule_type</code>.
     */
    public String getRuleType() {
        return (String) get(6);
    }

    /**
     * Setter for <code>public.sender_case.rule_details</code>.
     */
    public void setRuleDetails(JSONB value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.sender_case.rule_details</code>.
     */
    public JSONB getRuleDetails() {
        return (JSONB) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Long, String, Long, Boolean, JLogicalOperatorEnum, String, String, JSONB> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Long, String, Long, Boolean, JLogicalOperatorEnum, String, String, JSONB> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JSenderCase.SENDER_CASE.ID;
    }

    @Override
    public Field<String> field2() {
        return JSenderCase.SENDER_CASE.SEND_CASE;
    }

    @Override
    public Field<Long> field3() {
        return JSenderCase.SENDER_CASE.PROJECT_ID;
    }

    @Override
    public Field<Boolean> field4() {
        return JSenderCase.SENDER_CASE.ENABLED;
    }

    @Override
    public Field<JLogicalOperatorEnum> field5() {
        return JSenderCase.SENDER_CASE.ATTRIBUTES_OPERATOR;
    }

    @Override
    public Field<String> field6() {
        return JSenderCase.SENDER_CASE.RULE_NAME;
    }

    @Override
    public Field<String> field7() {
        return JSenderCase.SENDER_CASE.RULE_TYPE;
    }

    @Override
    public Field<JSONB> field8() {
        return JSenderCase.SENDER_CASE.RULE_DETAILS;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getSendCase();
    }

    @Override
    public Long component3() {
        return getProjectId();
    }

    @Override
    public Boolean component4() {
        return getEnabled();
    }

    @Override
    public JLogicalOperatorEnum component5() {
        return getAttributesOperator();
    }

    @Override
    public String component6() {
        return getRuleName();
    }

    @Override
    public String component7() {
        return getRuleType();
    }

    @Override
    public JSONB component8() {
        return getRuleDetails();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getSendCase();
    }

    @Override
    public Long value3() {
        return getProjectId();
    }

    @Override
    public Boolean value4() {
        return getEnabled();
    }

    @Override
    public JLogicalOperatorEnum value5() {
        return getAttributesOperator();
    }

    @Override
    public String value6() {
        return getRuleName();
    }

    @Override
    public String value7() {
        return getRuleType();
    }

    @Override
    public JSONB value8() {
        return getRuleDetails();
    }

    @Override
    public JSenderCaseRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public JSenderCaseRecord value2(String value) {
        setSendCase(value);
        return this;
    }

    @Override
    public JSenderCaseRecord value3(Long value) {
        setProjectId(value);
        return this;
    }

    @Override
    public JSenderCaseRecord value4(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public JSenderCaseRecord value5(JLogicalOperatorEnum value) {
        setAttributesOperator(value);
        return this;
    }

    @Override
    public JSenderCaseRecord value6(String value) {
        setRuleName(value);
        return this;
    }

    @Override
    public JSenderCaseRecord value7(String value) {
        setRuleType(value);
        return this;
    }

    @Override
    public JSenderCaseRecord value8(JSONB value) {
        setRuleDetails(value);
        return this;
    }

    @Override
    public JSenderCaseRecord values(Long value1, String value2, Long value3, Boolean value4, JLogicalOperatorEnum value5, String value6, String value7, JSONB value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JSenderCaseRecord
     */
    public JSenderCaseRecord() {
        super(JSenderCase.SENDER_CASE);
    }

    /**
     * Create a detached, initialised JSenderCaseRecord
     */
    public JSenderCaseRecord(Long id, String sendCase, Long projectId, Boolean enabled, JLogicalOperatorEnum attributesOperator, String ruleName, String ruleType, JSONB ruleDetails) {
        super(JSenderCase.SENDER_CASE);

        set(0, id);
        set(1, sendCase);
        set(2, projectId);
        set(3, enabled);
        set(4, attributesOperator);
        set(5, ruleName);
        set(6, ruleType);
        set(7, ruleDetails);
    }
}
