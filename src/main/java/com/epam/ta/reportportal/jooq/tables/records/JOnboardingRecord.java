/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.tables.JOnboarding;

import java.time.Instant;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JOnboardingRecord extends UpdatableRecordImpl<JOnboardingRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.onboarding.id</code>.
     */
    public void setId(Short value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.onboarding.id</code>.
     */
    public Short getId() {
        return (Short) get(0);
    }

    /**
     * Setter for <code>public.onboarding.data</code>.
     */
    public void setData(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.onboarding.data</code>.
     */
    public String getData() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.onboarding.page</code>.
     */
    public void setPage(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.onboarding.page</code>.
     */
    public String getPage() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.onboarding.available_from</code>.
     */
    public void setAvailableFrom(Instant value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.onboarding.available_from</code>.
     */
    public Instant getAvailableFrom() {
        return (Instant) get(3);
    }

    /**
     * Setter for <code>public.onboarding.available_to</code>.
     */
    public void setAvailableTo(Instant value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.onboarding.available_to</code>.
     */
    public Instant getAvailableTo() {
        return (Instant) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Short> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JOnboardingRecord
     */
    public JOnboardingRecord() {
        super(JOnboarding.ONBOARDING);
    }

    /**
     * Create a detached, initialised JOnboardingRecord
     */
    public JOnboardingRecord(Short id, String data, String page, Instant availableFrom, Instant availableTo) {
        super(JOnboarding.ONBOARDING);

        setId(id);
        setData(data);
        setPage(page);
        setAvailableFrom(availableFrom);
        setAvailableTo(availableTo);
        resetChangedOnNotNull();
    }
}
