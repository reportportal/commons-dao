/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.tables.JRestorePasswordBid;

import java.time.Instant;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JRestorePasswordBidRecord extends UpdatableRecordImpl<JRestorePasswordBidRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.restore_password_bid.uuid</code>.
     */
    public void setUuid(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.restore_password_bid.uuid</code>.
     */
    public String getUuid() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.restore_password_bid.last_modified</code>.
     */
    public void setLastModified(Instant value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.restore_password_bid.last_modified</code>.
     */
    public Instant getLastModified() {
        return (Instant) get(1);
    }

    /**
     * Setter for <code>public.restore_password_bid.email</code>.
     */
    public void setEmail(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.restore_password_bid.email</code>.
     */
    public String getEmail() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JRestorePasswordBidRecord
     */
    public JRestorePasswordBidRecord() {
        super(JRestorePasswordBid.RESTORE_PASSWORD_BID);
    }

    /**
     * Create a detached, initialised JRestorePasswordBidRecord
     */
    public JRestorePasswordBidRecord(String uuid, Instant lastModified, String email) {
        super(JRestorePasswordBid.RESTORE_PASSWORD_BID);

        setUuid(uuid);
        setLastModified(lastModified);
        setEmail(email);
        resetChangedOnNotNull();
    }
}
