/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.tables.JPatternTemplateTestItem;

import org.jooq.Record2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JPatternTemplateTestItemRecord extends UpdatableRecordImpl<JPatternTemplateTestItemRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.pattern_template_test_item.pattern_id</code>.
     */
    public void setPatternId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.pattern_template_test_item.pattern_id</code>.
     */
    public Long getPatternId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.pattern_template_test_item.item_id</code>.
     */
    public void setItemId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.pattern_template_test_item.item_id</code>.
     */
    public Long getItemId() {
        return (Long) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JPatternTemplateTestItemRecord
     */
    public JPatternTemplateTestItemRecord() {
        super(JPatternTemplateTestItem.PATTERN_TEMPLATE_TEST_ITEM);
    }

    /**
     * Create a detached, initialised JPatternTemplateTestItemRecord
     */
    public JPatternTemplateTestItemRecord(Long patternId, Long itemId) {
        super(JPatternTemplateTestItem.PATTERN_TEMPLATE_TEST_ITEM);

        setPatternId(patternId);
        setItemId(itemId);
        resetChangedOnNotNull();
    }
}
