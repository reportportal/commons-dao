/*
 * Copyright 2019 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables;

import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.JPublic;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.tables.records.JAclObjectIdentityRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JAclObjectIdentity extends TableImpl<JAclObjectIdentityRecord> {

    private static final long serialVersionUID = -1169725579;

    /**
     * The reference instance of <code>public.acl_object_identity</code>
     */
    public static final JAclObjectIdentity ACL_OBJECT_IDENTITY = new JAclObjectIdentity();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JAclObjectIdentityRecord> getRecordType() {
        return JAclObjectIdentityRecord.class;
    }

    /**
     * The column <code>public.acl_object_identity.id</code>.
     */
    public final TableField<JAclObjectIdentityRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('acl_object_identity_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.acl_object_identity.object_id_class</code>.
     */
    public final TableField<JAclObjectIdentityRecord, Long> OBJECT_ID_CLASS = createField("object_id_class", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>public.acl_object_identity.object_id_identity</code>.
     */
    public final TableField<JAclObjectIdentityRecord, String> OBJECT_ID_IDENTITY = createField("object_id_identity", org.jooq.impl.SQLDataType.VARCHAR(36).nullable(false), this, "");

    /**
     * The column <code>public.acl_object_identity.parent_object</code>.
     */
    public final TableField<JAclObjectIdentityRecord, Long> PARENT_OBJECT = createField("parent_object", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.acl_object_identity.owner_sid</code>.
     */
    public final TableField<JAclObjectIdentityRecord, Long> OWNER_SID = createField("owner_sid", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.acl_object_identity.entries_inheriting</code>.
     */
    public final TableField<JAclObjectIdentityRecord, Boolean> ENTRIES_INHERITING = createField("entries_inheriting", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * Create a <code>public.acl_object_identity</code> table reference
     */
    public JAclObjectIdentity() {
        this(DSL.name("acl_object_identity"), null);
    }

    /**
     * Create an aliased <code>public.acl_object_identity</code> table reference
     */
    public JAclObjectIdentity(String alias) {
        this(DSL.name(alias), ACL_OBJECT_IDENTITY);
    }

    /**
     * Create an aliased <code>public.acl_object_identity</code> table reference
     */
    public JAclObjectIdentity(Name alias) {
        this(alias, ACL_OBJECT_IDENTITY);
    }

    private JAclObjectIdentity(Name alias, Table<JAclObjectIdentityRecord> aliased) {
        this(alias, aliased, null);
    }

    private JAclObjectIdentity(Name alias, Table<JAclObjectIdentityRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> JAclObjectIdentity(Table<O> child, ForeignKey<O, JAclObjectIdentityRecord> key) {
        super(child, key, ACL_OBJECT_IDENTITY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ACL_OBJECT_IDENTITY_PKEY, Indexes.UNIQUE_UK_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JAclObjectIdentityRecord, Long> getIdentity() {
        return Keys.IDENTITY_ACL_OBJECT_IDENTITY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JAclObjectIdentityRecord> getPrimaryKey() {
        return Keys.ACL_OBJECT_IDENTITY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JAclObjectIdentityRecord>> getKeys() {
        return Arrays.<UniqueKey<JAclObjectIdentityRecord>>asList(Keys.ACL_OBJECT_IDENTITY_PKEY, Keys.UNIQUE_UK_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JAclObjectIdentityRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JAclObjectIdentityRecord, ?>>asList(Keys.ACL_OBJECT_IDENTITY__FOREIGN_FK_2, Keys.ACL_OBJECT_IDENTITY__FOREIGN_FK_1, Keys.ACL_OBJECT_IDENTITY__FOREIGN_FK_3);
    }

    public JAclClass aclClass() {
        return new JAclClass(this, Keys.ACL_OBJECT_IDENTITY__FOREIGN_FK_2);
    }

    public com.epam.ta.reportportal.jooq.tables.JAclObjectIdentity aclObjectIdentity() {
        return new com.epam.ta.reportportal.jooq.tables.JAclObjectIdentity(this, Keys.ACL_OBJECT_IDENTITY__FOREIGN_FK_1);
    }

    public JAclSid aclSid() {
        return new JAclSid(this, Keys.ACL_OBJECT_IDENTITY__FOREIGN_FK_3);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JAclObjectIdentity as(String alias) {
        return new JAclObjectIdentity(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JAclObjectIdentity as(Name alias) {
        return new JAclObjectIdentity(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JAclObjectIdentity rename(String name) {
        return new JAclObjectIdentity(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JAclObjectIdentity rename(Name name) {
        return new JAclObjectIdentity(name, null);
    }
}
