/*
 * This file is generated by jOOQ.
*/
package com.epam.ta.reportportal.jooq.tables;


import com.epam.ta.reportportal.jooq.Indexes;
import com.epam.ta.reportportal.jooq.JPublic;
import com.epam.ta.reportportal.jooq.Keys;
import com.epam.ta.reportportal.jooq.tables.records.JWidgetRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.5"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JWidget extends TableImpl<JWidgetRecord> {

    private static final long serialVersionUID = 739722575;

    /**
     * The reference instance of <code>public.widget</code>
     */
    public static final JWidget WIDGET = new JWidget();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<JWidgetRecord> getRecordType() {
        return JWidgetRecord.class;
    }

    /**
     * The column <code>public.widget.id</code>.
     */
    public final TableField<JWidgetRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('widget_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.widget.name</code>.
     */
    public final TableField<JWidgetRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.widget.description</code>.
     */
    public final TableField<JWidgetRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR, this, "");

    /**
     * The column <code>public.widget.widget_type</code>.
     */
    public final TableField<JWidgetRecord, String> WIDGET_TYPE = createField("widget_type", org.jooq.impl.SQLDataType.VARCHAR.nullable(false), this, "");

    /**
     * The column <code>public.widget.items_count</code>.
     */
    public final TableField<JWidgetRecord, Short> ITEMS_COUNT = createField("items_count", org.jooq.impl.SQLDataType.SMALLINT, this, "");

    /**
     * The column <code>public.widget.project_id</code>.
     */
    public final TableField<JWidgetRecord, Long> PROJECT_ID = createField("project_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>public.widget.filter_id</code>.
     */
    public final TableField<JWidgetRecord, Long> FILTER_ID = createField("filter_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>public.widget</code> table reference
     */
    public JWidget() {
        this(DSL.name("widget"), null);
    }

    /**
     * Create an aliased <code>public.widget</code> table reference
     */
    public JWidget(String alias) {
        this(DSL.name(alias), WIDGET);
    }

    /**
     * Create an aliased <code>public.widget</code> table reference
     */
    public JWidget(Name alias) {
        this(alias, WIDGET);
    }

    private JWidget(Name alias, Table<JWidgetRecord> aliased) {
        this(alias, aliased, null);
    }

    private JWidget(Name alias, Table<JWidgetRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return JPublic.PUBLIC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.WIDGET_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<JWidgetRecord, Long> getIdentity() {
        return Keys.IDENTITY_WIDGET;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<JWidgetRecord> getPrimaryKey() {
        return Keys.WIDGET_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<JWidgetRecord>> getKeys() {
        return Arrays.<UniqueKey<JWidgetRecord>>asList(Keys.WIDGET_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<JWidgetRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<JWidgetRecord, ?>>asList(Keys.WIDGET__WIDGET_PROJECT_ID_FKEY, Keys.WIDGET__WIDGET_USER_FILTER_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JWidget as(String alias) {
        return new JWidget(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public JWidget as(Name alias) {
        return new JWidget(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public JWidget rename(String name) {
        return new JWidget(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public JWidget rename(Name name) {
        return new JWidget(name, null);
    }
}
