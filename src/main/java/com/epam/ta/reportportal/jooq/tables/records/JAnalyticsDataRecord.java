/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.tables.JAnalyticsData;

import java.time.Instant;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.4"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JAnalyticsDataRecord extends UpdatableRecordImpl<JAnalyticsDataRecord> implements Record4<Long, String, Instant, JSONB> {

    private static final long serialVersionUID = 924865012;

    /**
     * Setter for <code>public.analytics_data.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.analytics_data.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.analytics_data.type</code>.
     */
    public void setType(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.analytics_data.type</code>.
     */
    public String getType() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.analytics_data.created_at</code>.
     */
    public void setCreatedAt(Instant value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.analytics_data.created_at</code>.
     */
    public Instant getCreatedAt() {
        return (Instant) get(2);
    }

    /**
     * Setter for <code>public.analytics_data.metadata</code>.
     */
    public void setMetadata(JSONB value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.analytics_data.metadata</code>.
     */
    public JSONB getMetadata() {
        return (JSONB) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, Instant, JSONB> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, Instant, JSONB> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return JAnalyticsData.ANALYTICS_DATA.ID;
    }

    @Override
    public Field<String> field2() {
        return JAnalyticsData.ANALYTICS_DATA.TYPE;
    }

    @Override
    public Field<Instant> field3() {
        return JAnalyticsData.ANALYTICS_DATA.CREATED_AT;
    }

    @Override
    public Field<JSONB> field4() {
        return JAnalyticsData.ANALYTICS_DATA.METADATA;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getType();
    }

    @Override
    public Instant component3() {
        return getCreatedAt();
    }

    @Override
    public JSONB component4() {
        return getMetadata();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getType();
    }

    @Override
    public Instant value3() {
        return getCreatedAt();
    }

    @Override
    public JSONB value4() {
        return getMetadata();
    }

    @Override
    public JAnalyticsDataRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public JAnalyticsDataRecord value2(String value) {
        setType(value);
        return this;
    }

    @Override
    public JAnalyticsDataRecord value3(Instant value) {
        setCreatedAt(value);
        return this;
    }

    @Override
    public JAnalyticsDataRecord value4(JSONB value) {
        setMetadata(value);
        return this;
    }

    @Override
    public JAnalyticsDataRecord values(Long value1, String value2, Instant value3, JSONB value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JAnalyticsDataRecord
     */
    public JAnalyticsDataRecord() {
        super(JAnalyticsData.ANALYTICS_DATA);
    }

    /**
     * Create a detached, initialised JAnalyticsDataRecord
     */
    public JAnalyticsDataRecord(Long id, String type, Instant createdAt, JSONB metadata) {
        super(JAnalyticsData.ANALYTICS_DATA);

        set(0, id);
        set(1, type);
        set(2, createdAt);
        set(3, metadata);
    }
}
