/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;


import com.epam.ta.reportportal.jooq.tables.JShedlock;

import java.time.Instant;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class JShedlockRecord extends UpdatableRecordImpl<JShedlockRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.shedlock.name</code>.
     */
    public void setName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.shedlock.name</code>.
     */
    public String getName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>public.shedlock.lock_until</code>.
     */
    public void setLockUntil(Instant value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.shedlock.lock_until</code>.
     */
    public Instant getLockUntil() {
        return (Instant) get(1);
    }

    /**
     * Setter for <code>public.shedlock.locked_at</code>.
     */
    public void setLockedAt(Instant value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.shedlock.locked_at</code>.
     */
    public Instant getLockedAt() {
        return (Instant) get(2);
    }

    /**
     * Setter for <code>public.shedlock.locked_by</code>.
     */
    public void setLockedBy(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.shedlock.locked_by</code>.
     */
    public String getLockedBy() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached JShedlockRecord
     */
    public JShedlockRecord() {
        super(JShedlock.SHEDLOCK);
    }

    /**
     * Create a detached, initialised JShedlockRecord
     */
    public JShedlockRecord(String name, Instant lockUntil, Instant lockedAt, String lockedBy) {
        super(JShedlock.SHEDLOCK);

        setName(name);
        setLockUntil(lockUntil);
        setLockedAt(lockedAt);
        setLockedBy(lockedBy);
        resetChangedOnNotNull();
    }
}
