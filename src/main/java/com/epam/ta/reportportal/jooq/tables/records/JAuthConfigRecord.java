/*
 * Copyright 2019 EPAM Systems
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/*
 * This file is generated by jOOQ.
 */
package com.epam.ta.reportportal.jooq.tables.records;

import com.epam.ta.reportportal.jooq.tables.JAuthConfig;
import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;

import javax.annotation.Generated;


/**
 * This class is generated by jOOQ.
 */
@Generated(value = { "http://www.jooq.org", "jOOQ version:3.11.11" }, comments = "This class is generated by jOOQ")
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JAuthConfigRecord extends UpdatableRecordImpl<JAuthConfigRecord> implements Record3<String, Long, Long> {

	private static final long serialVersionUID = -1610861438;

	/**
	 * Setter for <code>public.auth_config.id</code>.
	 */
	public void setId(String value) {
		set(0, value);
	}

	/**
	 * Getter for <code>public.auth_config.id</code>.
	 */
	public String getId() {
		return (String) get(0);
	}

	/**
	 * Setter for <code>public.auth_config.ldap_config_id</code>.
	 */
	public void setLdapConfigId(Long value) {
		set(1, value);
	}

	/**
	 * Getter for <code>public.auth_config.ldap_config_id</code>.
	 */
	public Long getLdapConfigId() {
		return (Long) get(1);
	}

	/**
	 * Setter for <code>public.auth_config.active_directory_config_id</code>.
	 */
	public void setActiveDirectoryConfigId(Long value) {
		set(2, value);
	}

	/**
	 * Getter for <code>public.auth_config.active_directory_config_id</code>.
	 */
	public Long getActiveDirectoryConfigId() {
		return (Long) get(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, Long, Long> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<String, Long, Long> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return JAuthConfig.AUTH_CONFIG.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field2() {
		return JAuthConfig.AUTH_CONFIG.LDAP_CONFIG_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Long> field3() {
		return JAuthConfig.AUTH_CONFIG.ACTIVE_DIRECTORY_CONFIG_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String component1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long component2() {
		return getLdapConfigId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long component3() {
		return getActiveDirectoryConfigId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value2() {
		return getLdapConfigId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Long value3() {
		return getActiveDirectoryConfigId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JAuthConfigRecord value1(String value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JAuthConfigRecord value2(Long value) {
		setLdapConfigId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JAuthConfigRecord value3(Long value) {
		setActiveDirectoryConfigId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public JAuthConfigRecord values(String value1, Long value2, Long value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached JAuthConfigRecord
	 */
	public JAuthConfigRecord() {
		super(JAuthConfig.AUTH_CONFIG);
	}

	/**
	 * Create a detached, initialised JAuthConfigRecord
	 */
	public JAuthConfigRecord(String id, Long ldapConfigId, Long activeDirectoryConfigId) {
		super(JAuthConfig.AUTH_CONFIG);

		set(0, id);
		set(1, ldapConfigId);
		set(2, activeDirectoryConfigId);
	}
}
