<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  ~ Copyright 2019 EPAM Systems
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<configuration xmlns="http://www.jooq.org/xsd/jooq-codegen-3.11.0.xsd">
    <!-- Configure the database connection here -->
    <jdbc>
        <driver>org.postgresql.Driver</driver>
        <url>jdbc:postgresql://localhost:5432/reportportal</url>
        <user>rpuser</user>
        <password>rppass</password>
    </jdbc>

    <generator>
        <!-- The default code generator. You can override this one, to generate your own code style.
             Supported generators:
             - org.jooq.util.JavaGenerator
             - org.jooq.util.ScalaGenerator
             Defaults to org.jooq.util.JavaGenerator -->

        <strategy>
            <name>org.jooq.codegen.example.JPrefixGeneratorStrategy</name>
        </strategy>
        <database>
            <!-- The database type. The format here is:
                 org.util.[database].[database]Database -->
            <name>org.jooq.meta.postgres.PostgresDatabase</name>

            <!-- The database schema (or in the absence of schema support, in your RDBMS this
                 can be the owner, user, database name) to be generated -->
            <inputSchema>public</inputSchema>

            <!-- All elements that are generated from your schema
                 (A Java regular expression. Use the pipe to separate several expressions)
                 Watch out for case-sensitivity. Depending on your database, this might be important! -->
            <includes>.*</includes>

            <!-- All elements that are excluded from your schema
                 (A Java regular expression. Use the pipe to separate several expressions).
                 Excludes match before includes, i.e. excludes have a higher priority -->
            <excludes>schema_migrations</excludes>
        </database>

        <generate>
            <pojos>false</pojos>
            <jpaAnnotations>false</jpaAnnotations>
            <routines>false</routines>
            <deprecationOnUnknownTypes>false</deprecationOnUnknownTypes>
        </generate>

        <target>
            <!-- The destination package of your generated classes (within the destination directory) -->
            <packageName>com.epam.ta.reportportal.jooq</packageName>
            <!-- The destination directory of your generated classes. Using Maven directory layout here -->
            <directory>../src/main/java/</directory>
        </target>
    </generator>
</configuration>

        <!--
                Put the property file, jooq*.jar and the JDBC driver into a directory, e.g. C:\temp\jooq
                Go to C:\temp\jooq
                (Unix)    Run java -cp jooq-3.11.7.jar:jooq-meta-3.11.7.jar:jooq-codegen-3.11.7.jar:postgresql-42.2.5.jar:. org.jooq.codegen.GenerationTool /jooq.xml
                (Windows) Run java -cp jooq-3.11.7.jar;jooq-meta-3.11.7.jar;jooq-codegen-3.11.7.jar;postgresql-42.2.5.jar;. org.jooq.codegen.GenerationTool /jooq.xml
        -->